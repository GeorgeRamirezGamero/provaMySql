### This is the main way to configure the application (other than annotations).
### This file is in Yaml format but you can also configure spring boot using the traditional
### Java properties file format. 

#spring.jmx:
#   enabled: false

spring.datasource:
    url: jdbc:mysql://localhost:3306/ticket?serverTimezone=UTC
    username: root
    password: admin
    driverClassName: com.mysql.cj.jdbc.Driver 
    
server:
  port: 9090

#todo: make sure to always enable security in production
#security:
#  basic:
#    enabled: false

#management endpoints on a separate port
#management:
#  port: 8091
#  security:
#    enabled: false # management port is internal only. no need to secure it.

#default project info followed by actual injected pom-specified values.
#project:
#  name: spring-boot-rest-example
#  version: 0.1
#  description: boot-example default description
#info:
#  build:
#    artifact: ${project.artifactId}
#    name: ${project.name}
#    description: ${project.description}
#    version: ${project.version}

#hotel.service:
#  name: 'default profile:'
---
#spring:
#  profiles: test
#  h2:
#    console:
#      enabled: true

spring.jpa:
    
    database-platform: org.hibernate.dialect.MySQL8Dialect
    database: MYSQL 
    hibernate.ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        proc.param_null_passing: true
        format_sql: true
        
        
    
    #properties.hibernate.dialect: org.hibernate.dialect.MySQL5Dialect      

#hotel.service:
#  name: 'test profile:'
  
#logging:
#  file: boot_example.log
#  org.hibernate: INFO

 